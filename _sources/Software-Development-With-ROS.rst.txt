Software Development with ROS2
==============================

Documentation
------------------
For documentation there are multiple requirements when working with ROS2 projects. Important
requirements for creating documentation are the following.

Requirements
""""""""""""

* **Requirement: Consistency over the project lifecycle**
  
  On the on side documentation of the requirements, design and concept, code, tests and interfaces. In order to achieve consistency
  in the documentation a common tool used. 


* **Requirement: Automated Code Documentation Mechanism**

  As most ROS2 projects are heavy on the software side, a documentation tool needs strong code documentation
  mechanisms for at least C++ and Python.

* **Requirement: Online and Offline File Formats**
  
  Documentation can be delivered in different ways. Usually, when creating a modern product, you will want to
  provide documentation and manuals that are easily accessible online as a website as well as PDF or printed
  documents. A Documentation tool needs to provide the capabilities to generate these from the same source
  text.

* **Requirement: Configurable Looks**
  
  The design of the documentation should be configurable in order to be able to brand the documentation of a 
  project or product.


Tools
""""""
**Doxygen:**
Doxygen is a classical code documentation tool. It enables extracting documentation information from the source
code of many different programming languages. It enables creating html, pdf and other output formats.


**Sphinx:**
Sphinx is a tool for generating documentation based on the restructured Text format. It enables creating well structured documentation and can also be
used to write manuals. Another interesting feature is that it can use output generated by doxygen to create code
documentation. Sphinx can be used for all documentation purposes throught out the project lifecycle.




Unit Coding
-----------
Python
C++




Software integration
--------------------
launch




Deployment
----------
Docker
Snaps
OpenEmbedded





Unit testing
------------
GTest
Pytest





Integration testing
-------------------
launch_testing





Continuous integration
----------------------




